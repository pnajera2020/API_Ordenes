// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Data.Migrations
{
    [DbContext(typeof(ApiDBContext))]
    partial class ApiDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Data.CtEstatus", b =>
                {
                    b.Property<long>("PKIdEstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_estatus")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasColumnName("descripcion")
                        .HasColumnType("text");

                    b.HasKey("PKIdEstatus");

                    b.ToTable("cat_estatus");
                });

            modelBuilder.Entity("Data.CtMetodoPago", b =>
                {
                    b.Property<long>("PKIdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_metodo_pago")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasColumnName("descripcion")
                        .HasColumnType("text");

                    b.HasKey("PKIdMetodoPago");

                    b.ToTable("cat_metodo_pago");
                });

            modelBuilder.Entity("Data.TbOrden", b =>
                {
                    b.Property<long>("PKIdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_orden")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("FKIdEstatus")
                        .HasColumnName("id_estatus")
                        .HasColumnType("bigint");

                    b.Property<long>("FKIdMetodoPago")
                        .HasColumnName("id_metodo_pago")
                        .HasColumnType("bigint");

                    b.Property<long>("FKIdUsuario")
                        .HasColumnName("id_usuario")
                        .HasColumnType("bigint");

                    b.Property<string>("Fecha")
                        .HasColumnName("fecha")
                        .HasColumnType("text");

                    b.Property<decimal>("Total")
                        .HasColumnName("total")
                        .HasColumnType("numeric");

                    b.HasKey("PKIdOrden");

                    b.HasIndex("FKIdEstatus");

                    b.HasIndex("FKIdMetodoPago");

                    b.ToTable("tb_orden");
                });

            modelBuilder.Entity("Data.TbOrdenProducto", b =>
                {
                    b.Property<long>("PKIdOrdenProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_orden")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Cantidad")
                        .HasColumnName("cantidad")
                        .HasColumnType("numeric");

                    b.Property<long>("FKIdOrden")
                        .HasColumnName("id_orden")
                        .HasColumnType("bigint");

                    b.Property<long>("FKIdProducto")
                        .HasColumnName("id_producto")
                        .HasColumnType("bigint");

                    b.HasKey("PKIdOrdenProducto");

                    b.HasIndex("FKIdOrden");

                    b.ToTable("tb_orden_producto");
                });

            modelBuilder.Entity("Data.TbOrden", b =>
                {
                    b.HasOne("Data.CtEstatus", "FKIdEstatusNavigation")
                        .WithMany("TbOrden")
                        .HasForeignKey("FKIdEstatus")
                        .HasConstraintName("fk_cat_orden_id_orden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.CtMetodoPago", "FKIdMetodoPagoNavigation")
                        .WithMany("TbOrden")
                        .HasForeignKey("FKIdMetodoPago")
                        .HasConstraintName("fk_cat_metodo_pago_id_metodo_pago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.TbOrdenProducto", b =>
                {
                    b.HasOne("Data.TbOrden", "FKIdOrdenNavigation")
                        .WithMany("TbOrdenProducto")
                        .HasForeignKey("FKIdOrden")
                        .HasConstraintName("fk_cat_orden_id_orden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
